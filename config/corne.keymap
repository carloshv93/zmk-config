/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define ARROWS 1
#define SPECIAL 2
#define ADJUST 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        // -----------------------------------------------------------------------------------------
                        // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
                        // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
                        // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
                        //                    | GUI | NUM | SPC |   | ENT | SPE  | ALT |
                        bindings = <
                                &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
                                &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                                                &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };

                arrows_layer {
                        // -----------------------------------------------------------------------------------------
                        // | DEL  | F1 | F2 | F3 | F4 | F5  |    |     |     |  UP  |     |    | BKSP |
                        // | SHFT | F6 | F7 | F8 | F9 | F10 |    |     | LFT | DOWN | RGT |    |      |
                        // | CTRL | F11| F12|    |    |     |    |     |     |      |     |    |      |
                        //                  |    |    | SPC |    | ENT |     | ALT  |

                        bindings = <
                                &kp DEL  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5      &none   &none     &kp UP    &none      &none  &trans
                                &trans   &kp F6  &kp F7  &kp F8  &kp F9  &kp F10    &none   &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
                                &trans   &kp F11 &kp F12 &none   &none   &none      &none   &none     &none     &none      &none  &none
                                                         &none   &trans  &none      &trans  &trans     &trans
                        >;
                };

                special_layer {
                        // -----------------------------------------------------------------------------------------
                        // | ~ |  !  |  @  |  #  |  $  |  %  |    |  *  |  7  |  8  |  9  |  /  | BKSP |
                        // | \ |  ^  |  &  |  (  |  )  |  _  |    |  -  |  4  |  5  |  6  |  ,  |      |
                        // | ` |  [  |  ]  |  {  |  }  |  |  |    |  +  |  1  |  2  |  3  |  .  |  =   |
                        //                 | GUI |     | SPC |    | ENT |  =  |  0 |
                        bindings = <
                                &kp TILDE  &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp KP_MULTIPLY &kp N7     &kp N8  &kp N9  &kp FSLH   &kp BSPC
                                &kp BSLH   &kp CARET  &kp AMPS  &kp LPAR  &kp RPAR  &kp UNDER    &kp MINUS       &kp N4     &kp N5  &kp N6  &kp COMMA  &none
                                &kp GRAVE  &kp LBKT   &kp RBKT  &kp LBRC  &kp RBRC  &kp PIPE     &kp PLUS        &kp N1     &kp N2  &kp N3  &kp DOT    &kp EQUAL
                                                          &kp LGUI &trans   &kp SPACE            &kp RET         &kp EQUAL  &kp N0
                        >;
                };
                
                adjust_layer {
                        // -----------------------------------------------------------------------------------------
                        // |    Reset   |                |     |     |     |     |   |     |     |     |     |     | BKSP |
                        // |    BTCLR   | BT1            | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
                        // | Bootloader | Tog(BT,WIRE)   |     |     |     |     |   |     |     |     |     |     |      |
                        //                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
                                &sys_reset      &trans       &trans       &trans       &trans       &trans         &trans   &trans              &trans   &trans    &trans &kp BSPC
                                &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &ext_power EP_TOG   &trans   &trans    &trans &trans
                                &bootloader &out_tog  &trans       &trans       &trans       &trans         &trans   &trans              &trans   &trans    &trans &trans
                                                                     &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };
                
        };
        
        conditional_layers {
                compatible = "zmk,conditional-layers";
                adjust {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };
};
